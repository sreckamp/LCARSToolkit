<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:lcars="clr-namespace:LCARSToolkit.Controls">

    <!--The user will define a FontFamily with Key LCARS, because we can't provide the ttf with the package.-->
    <!--<FontFamily x:Key="LCARS">Resources/lcars.ttf#LCARS</FontFamily>-->
    <FontFamily x:Key="LCARS">Swiss921 BT</FontFamily>

    <SolidColorBrush x:Key="LCARS_DarkOrange" Color="#FF9C00" />
    <SolidColorBrush x:Key="LCARS_Orange" Color="#FF9C83" />
    <SolidColorBrush x:Key="LCARS_RichOrange" Color="#F5ED00" />
    <SolidColorBrush x:Key="LCARS_LightOrange" Color="#F7B05A" />
    <SolidColorBrush x:Key="LCARS_PaleOrange" Color="#FFCC99" />
    <SolidColorBrush x:Key="LCARS_LightYellow" Color="#FFFF33" />
    <SolidColorBrush x:Key="LCARS_PaleYellow" Color="#FFFF9C" />
    <SolidColorBrush x:Key="LCARS_Red" Color="#CD8383" />
    <SolidColorBrush x:Key="LCARS_Purple" Color="#848DCC" />
    <SolidColorBrush x:Key="LCARS_LightPurple" Color="#9C9CFF" />
    <SolidColorBrush x:Key="LCARS_PalePurple" Color="#CC99CC" />
    <SolidColorBrush x:Key="LCARS_Blue" Color="#3399FF" />
    <SolidColorBrush x:Key="LCARS_LightBlue" Color="#99CCFF" />
    <SolidColorBrush x:Key="LCARS_Brown" Color="#ED884C" />
    <SolidColorBrush x:Key="LCARS_Tan" Color="#B1957A" />
    <SolidColorBrush x:Key="LCARS_OffWhite" Color="#FFFFCC" />
    <SolidColorBrush x:Key="LCARS_White" Color="#DDFFFF" />
    <SolidColorBrush x:Key="LCARS_Black" Color="Black" />

    <SolidColorBrush x:Key="LCARS_DefaultBackground" Color="{Binding Source={StaticResource LCARS_Blue}, Path=Color}"/>
    <SolidColorBrush x:Key="LCARS_DisabledBackground" Color="#333333"/>
    <SolidColorBrush x:Key="LCARS_DisabledText" Color="Gray"/>
    <SolidColorBrush x:Key="LCARS_DefaultTextColor" Color="{Binding Source={StaticResource LCARS_Black}, Path=Color}"/>

    <s:Double x:Key="ControlLabelFontSize">28</s:Double>
    
    <lcars:ToUpperConverter x:Key="ToUpperConverter"/>

    <Style TargetType="TextBlock" x:Key="LcarsTextBlock">
        <Setter Property="FontFamily" Value="{StaticResource LCARS}"/>
    </Style>

    <Style TargetType="lcars:LabeledButton">
        <Setter Property="Background" Value="{StaticResource LCARS_DefaultBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource LCARS_DefaultTextColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,4,8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource LCARS}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="{StaticResource ControlLabelFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <!-- <Setter Property="UseSystemFocusVisuals" Value="True"/> -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="lcars:LabeledButton">
                    <DockPanel x:Name="root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <!--<PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="rect"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemControlHighlightBaseMediumLowBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
    
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemControlHighlightBaseMediumLowBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemControlHighlightBaseHighBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
                                        <!--<PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="rect"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ButtonPressedBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="text"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ButtonPressedBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
    
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ButtonPressedBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ContentPresenter"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemControlHighlightTransparentBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
                                        <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter"> -->
                                        <!--     <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ControlLabelBrush}"/> -->
                                        <!-- </ObjectAnimationUsingKeyFrames> -->
                                        <!--<PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="left">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LCARS_DisabledBackground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LCARS_DisabledBackground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="right">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LCARS_DisabledBackground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="side">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LCARS_DisabledBackground}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LCARS_DisabledText}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <lcars:Stump x:Name="left" DockPanel.Dock="Left" Visibility="{TemplateBinding LeftVisibility}" Illumination="{TemplateBinding Illumination}" Diameter="{TemplateBinding ActualHeight}" Direction="Left" Fill="{TemplateBinding Background}"/>
                        <lcars:Stump x:Name="right" DockPanel.Dock="Right" Visibility="{TemplateBinding RightVisibility}" Illumination="{TemplateBinding Illumination}" Diameter="{TemplateBinding ActualHeight}" Direction="Right" Fill="{TemplateBinding Background}"/>
                        <lcars:Rectangle x:Name="side" DockPanel.Dock="Left" Visibility="{TemplateBinding LabelVisibility}" Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding SideWidth}" Illumination="{TemplateBinding Illumination}" Fill="{TemplateBinding Background}"/>
                        <Viewbox x:Name="label" DockPanel.Dock="Left" Stretch="Uniform" Margin="5,0" Visibility="{TemplateBinding LabelVisibility}">
                            <TextBlock x:Name="text"
                                       Style="{StaticResource LcarsTextBlock}"
                                       Text="{TemplateBinding Label}"
                                       FontSize="{TemplateBinding LabelSize}"
                                       Foreground="{TemplateBinding LabelColor}"
                                       VerticalAlignment="Center"
                                       LineStackingStrategy="BlockLineHeight"/>
                        </Viewbox>
                        <lcars:Rectangle x:Name="content"
                                         Content="{TemplateBinding Content}"
                                         Height="{TemplateBinding ActualHeight}"
                                         Illumination="{TemplateBinding Illumination}"
                                         Fill="{TemplateBinding Background}"
                                         Foreground="{TemplateBinding Foreground}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        </lcars:Rectangle>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="lcars:LabeledButton" x:Key="SideButton"
           BasedOn="{StaticResource {x:Type lcars:LabeledButton}}">
        <Setter Property="Stumps" Value="None"/>
        <Setter Property="Margin" Value="0,5"/>
    </Style>

    <Style x:Key="ScrollBarBlockButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource LCARS_White}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarBlockThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource LCARS_Blue}" Margin="0,5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar" x:Key="LcarsVerticalScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Track x:Name="PART_Track"
                           IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarBlockButton}"
                                          Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb >
                            <Thumb Style="{StaticResource ScrollBarBlockThumb}"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarBlockButton}"
                                          Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" x:Key="LcarsLeftScrollViewer">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <lcars:Rectangle Grid.Column="0"
                                         Fill="{TemplateBinding lcars:Lcars.Fill}"
                                         Width="{TemplateBinding lcars:Lcars.Column}"
                                         HorizontalAlignment="Right">
                            <lcars:Rectangle.Style>
                                <Style TargetType="lcars:Rectangle">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Visibility, ElementName=PART_VerticalScrollBar}"
                                                     Value="Visible">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </lcars:Rectangle.Style>
                        </lcars:Rectangle>
                        <ScrollBar Grid.Column="0" Name="PART_VerticalScrollBar"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource LcarsVerticalScrollBar}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollContentPresenter Grid.Column="1" Margin="20, 10, 0, 0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" x:Key="LcarsRightScrollViewer">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding Path=HorizontalScrollBarVisibility}"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Margin="20, 10, 0, 0"/>
                        <lcars:Rectangle Grid.Column="1"
                                         Fill="{TemplateBinding lcars:Lcars.Fill}"
                                         Width="{TemplateBinding lcars:Lcars.Column}"
                                         HorizontalAlignment="Right">
                            <lcars:Rectangle.Style>
                                <Style TargetType="lcars:Rectangle">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Visibility, ElementName=PART_VerticalScrollBar}"
                                                     Value="Visible">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </lcars:Rectangle.Style>
                        </lcars:Rectangle>
                        <ScrollBar Grid.Column="1" Name="PART_VerticalScrollBar"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource LcarsVerticalScrollBar}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="Brackets">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <lcars:Elbo Grid.Row="0" Grid.Column="0" Fill="{TemplateBinding Foreground}" Column="10" Bar="40" Corner="TopLeft" InnerArcRadius="10"/>
                        <lcars:Elbo Grid.Row="0" Grid.Column="2" Fill="{TemplateBinding Foreground}" Column="10" Bar="40" Corner="TopRight" InnerArcRadius="10"/>
                        <lcars:Rectangle Grid.Row="1" Grid.Column="0" Fill="{TemplateBinding Foreground}" Width="10" HorizontalAlignment="Left"/>
                        <lcars:Rectangle Grid.Row="1" Grid.Column="2" Fill="{TemplateBinding Foreground}" Width="10" HorizontalAlignment="Right"/>
                        <lcars:Elbo Grid.Row="2" Grid.Column="0" Fill="{TemplateBinding Foreground}" Column="10" Bar="40" Corner="BottomLeft" InnerArcRadius="10"/>
                        <lcars:Elbo Grid.Row="2" Grid.Column="2" Fill="{TemplateBinding Foreground}" Column="10" Bar="40" Corner="BottomRight" InnerArcRadius="10"/>
                        <ScrollViewer Grid.Row="1" Grid.Column="1" Margin="0" Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ListBox" x:Key="CListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <DockPanel>
                        <Grid DockPanel.Dock="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <lcars:Elbo Grid.Column="0"
                                        Fill="{TemplateBinding lcars:Lcars.Fill}"
                                        Column="{TemplateBinding lcars:Lcars.Column}"
                                        Bar="{TemplateBinding lcars:Lcars.Bar}"
                                        InnerArcRadius="{TemplateBinding lcars:Lcars.InnerArcRadius}"
                                        Corner="TopLeft"/>
                            <lcars:Rectangle Grid.Column="1"
                                             Fill="{TemplateBinding lcars:Lcars.Fill}"
                                             Height="{TemplateBinding lcars:Lcars.Bar}"
                                             VerticalAlignment="Top"/>
                            <TextBlock Grid.Column="2" Text="{TemplateBinding lcars:Lcars.Text, Converter={StaticResource ToUpperConverter}}"
                                       Visibility="{TemplateBinding lcars:Lcars.Visibility}"
                                       FontFamily="{StaticResource LCARS}"
                                       FontSize="30" Height="30" LineHeight="30"
                                       Margin="10,0,0,0"
                                       VerticalAlignment="Top"
                                       Foreground="{StaticResource LCARS_White}"
                                       LineStackingStrategy="BlockLineHeight"/>
                        </Grid>
                        <Grid DockPanel.Dock="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <lcars:Elbo Grid.Column="0"
                                        Fill="{TemplateBinding lcars:Lcars.Fill}"
                                        Column="{TemplateBinding lcars:Lcars.Column}"
                                        Bar="{TemplateBinding lcars:Lcars.Bar}"
                                        InnerArcRadius="{TemplateBinding lcars:Lcars.InnerArcRadius}"
                                        Corner="BottomLeft"/>
                            <lcars:Rectangle Grid.Column="1"
                                             Fill="{TemplateBinding lcars:Lcars.Fill}"
                                             Height="{TemplateBinding lcars:Lcars.Bar}"
                                             VerticalAlignment="Bottom"/>
                            <lcars:Stump Grid.Column="2"
                                         Fill="{TemplateBinding lcars:Lcars.Fill}"
                                         Height="{TemplateBinding lcars:Lcars.Bar}"
                                         Diameter="{TemplateBinding lcars:Lcars.Bar}"
                                         VerticalAlignment="Bottom"/>
                        </Grid>

                        <ScrollViewer x:Name="Values" Margin="0,0,0,0"
                                      Style="{StaticResource LcarsLeftScrollViewer}"
                                      lcars:Lcars.Fill="{TemplateBinding lcars:Lcars.Fill}"
                                      lcars:Lcars.Column="{TemplateBinding lcars:Lcars.Column}"
                                      Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
